class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        
        int n  = matrix.length;
        int m = matrix[0].length;
        int rmin = 0,  rmax = matrix.length-1;
        int cmin = 0,  cmax = matrix[0].length-1;
        int count =0;
        ArrayList<Integer> list = new ArrayList<>(); 
        while(count < n*m){
            for(int col = cmin; col<=cmax && count <n*m;col++){
                list.add(matrix[rmin][col]);
                count++;
                
            }
            rmin++;
            
            for(int row = rmin; row<=rmax && count <n*m;row++){
                list.add(matrix[row][cmax]);
                count++;
                
            }
            cmax--;
            
            for(int col = cmax; col>=cmin && count <n*m;col--){
                list.add(matrix[rmax][col]);
                count++;
                
            }
            rmax--;
            
             for(int row= rmax; row>=rmin && count <n*m;row--){
                list.add(matrix[row][cmin]);
                count++;
                
            }
            cmin++;
        }
        return list;
    }
}

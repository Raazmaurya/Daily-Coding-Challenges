/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode sortList(ListNode head) {
        return mergeSort(head);
        
    }
        private ListNode mergeSort(ListNode head){
        if(head==null || head.next == null) return head;
        ListNode slow = head;
        ListNode fast = head.next;
        while(fast!=null && fast.next!=null){
            fast = fast.next.next;
            slow= slow.next;
        }
        ListNode mid = slow.next;
        slow.next = null;
        ListNode left = mergeSort(head);
        ListNode right = mergeSort(mid);
        
        ListNode dummy = new ListNode(0);
        ListNode curr = dummy;
        while(left!=null && right!=null){
        if(left.val<right.val){
            curr.next = left;
            left = left.next;
         }else{
            curr.next = right;
            right = right.next;
        }
            curr = curr.next;
        
       }
        curr.next = left==null?right:left;
        return dummy.next;
    }

}
